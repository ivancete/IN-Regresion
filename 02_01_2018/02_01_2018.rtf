{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red55\green57\blue60;\red255\green255\blue255;\red0\green0\blue0;
\red88\green118\blue71;\red32\green32\blue32;\red153\green168\blue186;\red152\green54\blue29;\red86\green132\blue173;
\red191\green100\blue38;\red109\green109\blue109;\red117\green114\blue185;}
{\*\expandedcolortbl;;\cssrgb\c27843\c28627\c30196;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;
\csgenericrgb\c34510\c46275\c27843;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c60000\c65882\c72941;\csgenericrgb\c59608\c21176\c11373;\csgenericrgb\c33725\c51765\c67843;
\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c42745\c42745\c42745;\csgenericrgb\c45882\c44706\c72549;}
\paperw11900\paperh16840\margl1440\margr1440\vieww20020\viewh10200\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 POSICION: 627\
SCORE: 
\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
0.12415
\f1\fs24 \cf4 \cb1 \
 \

\f0               Train    Test\
Alley          1369  1352.0\
BsmtCond         37    45.0\
BsmtExposure     38    44.0\
BsmtFinSF1        0     1.0\
BsmtFinSF2        0     1.0\
BsmtFinType1     37    42.0\
BsmtFinType2     38    42.0\
BsmtFullBath      0     2.0\
BsmtHalfBath      0     2.0\
BsmtQual         37    44.0\
BsmtUnfSF         0     1.0\
Electrical        1     0.0\
Exterior1st       0     1.0\
Exterior2nd       0     1.0\
Fence          1179  1169.0\
FireplaceQu     690   730.0\
Functional        0     2.0\
GarageArea        0     1.0\
GarageCars        0     1.0\
GarageCond       81    78.0\
GarageFinish     81    78.0\
GarageQual       81    78.0\
GarageType       81    76.0\
GarageYrBlt      81    78.0\
KitchenQual       0     1.0\
LotFrontage     259   227.0\
MSZoning          0     4.0\
MasVnrArea        8    15.0\
MasVnrType        8    16.0\
MiscFeature    1406  1408.0\
PoolQC         1453  1456.0\
SaleType          0     1.0\
TotalBsmtSF       0     1.0\
Utilities         0     2.0\
ElasticNetCV(alphas=[0.0001, 0.0005, 0.001, 0.01, 0.1, 1, 10], copy_X=True,\
       cv=None, eps=0.001, fit_intercept=True,\
       l1_ratio=[0.01, 0.1, 0.5, 0.9, 0.99], max_iter=5000, n_alphas=100,\
       n_jobs=1, normalize=False, positive=False, precompute='auto',\
       random_state=None, selection='cyclic', tol=0.0001, verbose=0)\
R2: 0.9333434829566576\
RMSE: 0.09833172173468259\
RMSLE: 0.007668487185207326\
Test\
R2: 0.9232304627028727\
RMSE: 0.10961832092008054\
RMSLE: 0.008697210798521772\
Accuracy: 0.92 (+/- 0.03)\cf0 \kerning1\expnd0\expndtw0 \
\
Modificaciones realizadas en el script:\
\
Se realiza la predicci\'f3n con un \'fanico algoritmo, Elastic Net.\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f2 \cf5 \cb6 '''\
Elastic Net\
'''\
\
\cf7 ENSTest = linear_model.ElasticNetCV(\cf8 alphas\cf7 =[\cf9 0.0001\cf10 , \cf9 0.0005\cf10 , \cf9 0.001\cf10 , \cf9 0.01\cf10 , \cf9 0.1\cf10 , \cf9 1\cf10 , \cf9 10\cf7 ]\cf10 , \cf8 l1_ratio\cf7 =[\cf9 .01\cf10 , \cf9 .1\cf10 , \cf9 .5\cf10 , \cf9 .9\cf10 , \cf9 .99\cf7 ]\cf10 ,\
                                    \cf8 max_iter\cf7 =\cf9 5000\cf7 ).fit(x_train_st\cf10 , \cf7 y_train_st)\
train_test(ENSTest\cf10 , \cf7 x_train_st\cf10 , \cf7 x_test_st\cf10 , \cf7 y_train_st\cf10 , \cf7 y_test_st)\
\
\cf11 # Average R2 score and standard deviation of 5-fold cross-validation\
\cf7 scores = cross_val_score(ENSTest\cf10 , \cf7 train_features_st\cf10 , \cf7 train_labels\cf10 , \cf8 cv\cf7 =\cf9 5\cf7 )\
\cf12 print\cf7 (\cf5 "Accuracy: %0.2f (+/- %0.2f)" \cf7 % (scores.mean()\cf10 , \cf7 scores.std() * \cf9 2\cf7 ))\
ENST_model = ENSTest.fit(train_features_st\cf10 , \cf7 train_labels)\
\
\cf11 ## Getting our SalePrice estimation\
\cf7 Final_labels = np.exp(ENST_model.predict(test_features_st))\
\
\cf11 ## Saving to CSV\
\cf7 pd.DataFrame(\{\cf5 'Id'\cf7 : test.Id\cf10 , \cf5 'SalePrice'\cf7 : Final_labels\}).to_csv(\cf5 'submissionElasticNet.csv'\cf10 , \cf8 index\cf7 =\cf10 False\cf7 )\
\
\
Eliminaci\'f3n de Outliers:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf7 train = train [-((train.GrLivArea > \cf9 4000\cf7 ) & (train.SalePrice < \cf9 300000\cf7 ))]\
}